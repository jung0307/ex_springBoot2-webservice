buildscript {
    ext { // bulid.gradle에서 사용하는 전역변수를 설정한다는 의미
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories { // 각종 의존성(라이브러리)들을 어떤 원격 저장소에서 받을지를 정합니다.
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'java'
}

apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management' // 스프링 부트의 의존성들을 관리해 주는 플러그인 꼭 추가해야한다.


group 'org.example'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies { // 프로젝트 개발에 필요한 의존성들을 선언하는 곳입니다.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testImplementation 'junit:junit:4.13.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    implementation 'org.springframework.boot:spring-boot-starter-web' // compile이 implementation으로 변경되었다.
    testImplementation 'org.springframework.boot:spring-boot-starter-test' // testCompile이 testImplementation으로 변경되었다.
    compileOnly 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'

    // 스프링 부트용 Spring Data Jpa 추상화 라이브러리입니다.
    // 스프링 부트 버전에 맞춰 자동으로 JPA관련 라이브러리들의 버전을 관리해 줍니다.
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-jpa
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'

    // 인메모리 관계형 데이터베이스입니다.
    // 별도의 설치가 필요 없이 프로젝트에 의존성만으로 관리할 수 있습니다.
    // 메모리에서 실행되기 때문에 애플리케이션을 재시작할 때마다 초기화된다는 점을 이용하여 테스트 용도로 많이 사용됩니다.
    // https://mvnrepository.com/artifact/com.h2database/h2
    implementation group: 'com.h2database', name: 'h2'




}

test {
    useJUnitPlatform()
}